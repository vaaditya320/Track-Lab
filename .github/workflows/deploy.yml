name: Deploy to EC2

on:
  push:
    branches:
      - main  # Trigger on push to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up SSH key
      run: |
        echo "${{ secrets.PRIVATE_KEY }}" > private_key.pem
        chmod 600 private_key.pem

    - name: Deploy to EC2
      env:
        SERVER_IP: ${{ secrets.SERVER_IP }}
        USER: ${{ secrets.USER }}
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
        GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
        NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
        GMAIL_APP_PASSWORD: ${{ secrets.GMAIL_APP_PASSWORD }}
        NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
      run: |
        ssh -o StrictHostKeyChecking=no -i private_key.pem $USER@$SERVER_IP << 'EOF'
          # Ensure projects directory exists
          mkdir -p ~/projects
          cd ~/projects

          # Check if repo exists
          if [ ! -d "Track-Lab" ]; then
            echo "Cloning repository..."
            git clone https://github.com/vaaditya320/Track-Lab.git
          else
            echo "Repository already exists. Pulling latest changes..."
            cd Track-Lab
            git reset --hard origin/main
            git pull origin main
          fi

          # Navigate to the repository directory
          cd Track-Lab

          # Remove old build only if it exists
          if [ -d ".next" ]; then
            echo "Removing old build..."
            rm -rf .next
          fi

          # Set up environment variables in .env using echo
          echo "DATABASE_URL=${DATABASE_URL}" > .env
          echo "GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}" >> .env
          echo "GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}" >> .env
          echo "NEXTAUTH_SECRET=${NEXTAUTH_SECRET}" >> .env
          echo "GMAIL_APP_PASSWORD=${GMAIL_APP_PASSWORD}" >> .env
          echo "NEXTAUTH_URL=${NEXTAUTH_URL}" >> .env

          # Install dependencies & build
          echo "Installing dependencies..."
          npm install --no-optional --production --max-old-space-size=512

          echo "Building application..."
          npm run build

          # Restart server
          echo "Restarting server..."
          nohup npm start -- -p 5090 > server.log 2>&1 &

          echo "Deployment completed!"
        EOF
